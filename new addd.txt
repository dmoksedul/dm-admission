<?php
/*
Plugin Name: DM Admission
Description: A plugin to display an admission form and save data to the database.
Version: 1.0
Author: Moksedul Islam
Author URI: https://moksedul.dev/
*/

// Activation Hook
function admission_form_plugin_activation() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'dm_students';

    // SQL statement to create the table
    $charset_collate = $wpdb->get_charset_collate();
    $sql = "CREATE TABLE $table_name (
        id INT NOT NULL AUTO_INCREMENT,
        institute_name VARCHAR(255) NOT NULL,
        class VARCHAR(255) NOT NULL,
        section VARCHAR(255) NOT NULL,
        admission_date DATE NOT NULL,
        category VARCHAR(255) NOT NULL,
        student_first_name VARCHAR(255) NOT NULL,
        student_last_name VARCHAR(255) NOT NULL,
        student_gender VARCHAR(20) NOT NULL,
        student_birthdate DATE NOT NULL,
        student_blood_group VARCHAR(10) DEFAULT '', /* New field for blood group */
        student_phone_number VARCHAR(20) NOT NULL,
        student_email VARCHAR(255) NOT NULL,
        student_religion VARCHAR(255) NOT NULL,
        student_nid VARCHAR(255) NOT NULL,
        student_present_address TEXT NOT NULL,
        student_permanent_address TEXT NOT NULL,
        student_city VARCHAR(255) NOT NULL,
        student_state VARCHAR(255) NOT NULL,
        student_previous_institute_name VARCHAR(255) NOT NULL,
        student_previous_institute_qualification VARCHAR(255) NOT NULL,
        student_previous_institute_remarks TEXT NOT NULL,
        student_parent_name VARCHAR(255) NOT NULL,
        student_parent_relation VARCHAR(255) NOT NULL,
        student_father_name VARCHAR(255) NOT NULL,
        student_mother_name VARCHAR(255) NOT NULL,
        student_parent_occupation VARCHAR(255) NOT NULL,
        student_parent_income VARCHAR(255) NOT NULL,
        student_parent_education VARCHAR(255) NOT NULL,
        student_parent_email VARCHAR(255) NOT NULL,
        student_parent_number VARCHAR(20) NOT NULL,
        student_parent_address TEXT NOT NULL,
        student_parent_city VARCHAR(255) NOT NULL,
        student_parent_state VARCHAR(255) NOT NULL,
        student_image INT, /* Changed to INT to store attachment IDs */
        student_parent_image INT, /* Changed to INT to store attachment IDs */
        student_documents INT, /* Changed to INT to store attachment IDs */
        PRIMARY KEY (id)
    ) $charset_collate;";

    // Execute the SQL query to create the table
    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);
}
register_activation_hook(__FILE__, 'admission_form_plugin_activation');

// Deactivation Hook
function admission_form_plugin_deactivation() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'dm_students';

    // SQL statement to delete the table
    $sql = "DROP TABLE IF EXISTS $table_name;";
    $wpdb->query($sql);
}

// Add a top-level menu page for your plugin
function admission_form_plugin_menu() {
    add_menu_page(
        'DM Admission', // Page title
        'DM Admission',        // Menu title
        'manage_options',        // Capability required to access the menu
        'admission-form',        // Menu slug (unique identifier)
        'admission_form_page',   // Callback function to display the page content
        'dashicons-id-alt'       // Icon for the menu (you can choose from dashicons)
    );

    // Add a submenu page for the student list
    add_submenu_page(
        'admission-form',       // Parent menu slug
        'Student List',         // Page title
        'Student List',         // Menu title
        'manage_options',       // Capability required to access the menu
        'student-list',         // Menu slug (unique identifier)
        'display_student_list'  // Callback function to display the student list
    );

    // Add a submenu page for editing students
    add_submenu_page(
        'admission-form',
        'Edit Student',
        'Edit Student',
        'manage_options',
        'edit-student', // Sub-menu page slug
        'edit_student_page' // Callback function for editing students
    );

    // Add a submenu page for importing students from CSV
    add_submenu_page(
        'admission-form',                        // Parent menu slug
        'Import Students from CSV',              // Page title
        'Import Students from CSV',              // Menu title
        'manage_options',                        // Capability required to access the menu
        'import-students',                       // Menu slug (unique identifier)
        'import_students_form'                  // Callback function to display the import form
    );
}
add_action('admin_menu', 'admission_form_plugin_menu');

// student admission page linking
include_once('inc/admission_form_page.php');

// student list page linking
include_once('inc/student_list.php');

// student list export page linking
include_once('inc/student_list_export.php');

// student list import page linking
include_once('inc/import_student_csv.php');

// student edit page linking
include_once('inc/edit_student.php');

// student edit page linking
include_once('inc/search.php');




// Function to handle admission form shortcode
function admission_form_shortcode() {
    ob_start();
    
    if (isset($_POST['add_student'])) {
        handle_admission_form_submission();
    }
    
    // Display the admission form here
    ?>
    <div class="wrap">
        <h2>Admission Form</h2>
        <form id="student_admission_form" method="post" enctype="multipart/form-data">
            <!-- Institute Details -->
            <!-- Add your form fields here -->
            
            <!-- Student Image Upload -->
            <div class="input_box">
                <label for="student_image">Upload Student Image:</label>
                <input type="file" name="student_image" id="student_image" accept="image/*">
            </div>
            
            <!-- Continue with the rest of your form fields -->

            <div class="submit_button_box">
                <input type="submit" name="add_student" value="Add Student">
            </div>
        </form>
    </div>
    <?php

    return ob_get_clean();
}
add_shortcode('admission_form', 'admission_form_shortcode');

// Define a function to handle admission form submissions
function handle_admission_form_submission() {
    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_student'])) {
        // Initialize WordPress media library
        require_once(ABSPATH . 'wp-admin/includes/image.php');
        require_once(ABSPATH . 'wp-admin/includes/file.php');
        require_once(ABSPATH . 'wp-admin/includes/media.php');

        // Handle file uploads
        $uploaded_student_image_id = 0;

        if (isset($_FILES['student_image']) && $_FILES['student_image']['error'] === 0) {
            $uploaded_student_image_id = media_handle_upload('student_image', 0);

            if (is_wp_error($uploaded_student_image_id)) {
                // Handle the error here
                echo 'Error uploading student_image: ' . $uploaded_student_image_id->get_error_message();
                return; // Stop processing if there's an error
            }
        }

        // Sanitize and validate form data here
        // Sanitize and validate form data here
$data = array();

// Example: Sanitize and validate a text field
if (isset($_POST['student_name'])) {
    $student_name = sanitize_text_field($_POST['student_name']);
    // You can add further validation here, e.g., check if it's not empty or meets specific criteria
    if (!empty($student_name)) {
        $data['student_name'] = $student_name;
    } else {
        // Handle validation error for student name
        echo '<div class="error-message">Please provide a valid student name.</div>';
    }
}

// Example: Sanitize and validate an email field
if (isset($_POST['student_email'])) {
    $student_email = sanitize_email($_POST['student_email']);
    // You can add further validation here, e.g., check if it's a valid email format
    if (is_email($student_email)) {
        $data['student_email'] = $student_email;
    } else {
        // Handle validation error for student email
        echo '<div class="error-message">Please provide a valid email address.</div>';
    }
}

// Continue adding similar code for other form fields

// Example: Sanitize and validate a select field
if (isset($_POST['student_gender'])) {
    $student_gender = sanitize_text_field($_POST['student_gender']);
    // You can add further validation here, e.g., check if it's a valid option
    if (in_array($student_gender, array('Male', 'Female', 'Other'))) {
        $data['student_gender'] = $student_gender;
    } else {
        // Handle validation error for student gender
        echo '<div class="error-message">Please select a valid gender option.</div>';
    }
}

        // Insert data into the database
        global $wpdb;
        $table_name = $wpdb->prefix . 'dm_students';
        $wpdb->insert($table_name, $data);

        // Add success message or redirection here if needed
        echo '<div class="success-message">Student data has been submitted successfully.</div>';
    }
}